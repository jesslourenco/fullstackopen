services:
  app:
    image: todo-front-prod-img
    environment:
      REACT_APP_BACKEND_URL: http://localhost/api/
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    volumes:
      - ./todo-frontend:/usr/src/app
    ports:
      - 3002:80
    container_name: todo-front-prod-cont

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db

  redis:
    image: redis
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./todo-backend/redis_data:/data

  server:
    image: todo-backend-prod-img
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    environment:
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      REDIS_URL: redis://redis:6379
    volumes:
      - ./todo-backend:/usr/src/app
    ports:
      - 3001:3000
    container_name: todo-backend-prod-cont
    depends_on:
      - mongo
      - redis

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    depends_on:
      - app # wait for the frontend container to be started
      - server
    container_name: reverse-proxy
